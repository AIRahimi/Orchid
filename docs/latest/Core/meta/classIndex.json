[
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "compile",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Compile content with a particular file extension using the optional provided data."
          }],
          "blockTags": {"return": "the compiled content"},
          "description": "<p>Compile content with a particular file extension using the optional provided data.<\/p>\n",
          "shortDescription": "Compile content with a particular file extension using the optional provided data."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "extension",
            "description": "the file extension that represents the type of data to compile",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "input",
            "description": "the content to be compiled",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "data",
            "description": "optional data to be passed to the compiler",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "getOutputExtension",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Gets the file extension representing the type of the output content."
          }],
          "blockTags": {"return": "the output file extension"},
          "description": "<p>Gets the file extension representing the type of the output content.<\/p>\n",
          "shortDescription": "Gets the file extension representing the type of the output content."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getSourceExtensions",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Get the list of file extensions this OrchidCompiler is able to process."
          }],
          "blockTags": {"return": "the file extensions this OrchidCompiler can process"},
          "description": "<p>Get the list of file extensions this OrchidCompiler is able to process.<\/p>\n",
          "shortDescription": "Get the list of file extensions this OrchidCompiler is able to process."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      },
      {
        "name": "getIgnoredPatterns",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Get a list of patterns used to ignore files. Typically, this is to denote certain files as 'include-only', and\n thus will help keep those files out of batch-compilations. Note that this matches the filename and extension\n only, ignoring all path information."
          }],
          "blockTags": {"return": "a list of regexes that match file names to ignore, or null if no files should be ignored"},
          "description": "<p>Get a list of patterns used to ignore files. Typically, this is to denote certain files as 'include-only', and\nthus will help keep those files out of batch-compilations. Note that this matches the filename and extension\nonly, ignoring all path information.<\/p>\n",
          "shortDescription": "Get a list of patterns used to ignore files."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.compilers",
      "qualifiedName": "com.eden.orchid.api.compilers.OrchidCompiler",
      "name": "OrchidCompiler",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A generic compiler which can be used by a Theme to transform content. When a Theme is requested to compile a file of\n a given type, it searches the list of registered Compilers and picks the one with the highest priority that is able\n to compile the given file type."
        }],
        "description": "<p>A generic compiler which can be used by a Theme to transform content. When a Theme is requested to compile a file of\na given type, it searches the list of registered Compilers and picks the one with the highest priority that is able\nto compile the given file type.<\/p>\n",
        "shortDescription": "A generic compiler which can be used by a Theme to transform content."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/compilers/OrchidCompiler"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "getEmbeddedData",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "Extract the data embedded within some given content, returning the data that was extracted as well as the content\n after the embedded data has been removed."
        }],
        "blockTags": {"return": "a pair representing the content after removal of embedded content, and the content that was embedded"},
        "description": "<p>Extract the data embedded within some given content, returning the data that was extracted as well as the content\nafter the embedded data has been removed.<\/p>\n",
        "shortDescription": "Extract the data embedded within some given content, returning the data that was extracted as well as the content\n after the embedded data has been removed."
      },
      "returns": {
        "qualifiedName": "com.eden.common.util.EdenPair",
        "name": "EdenPair",
        "dimension": "",
        "typeParameters": [
          {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          },
          {
            "qualifiedName": "com.eden.common.json.JSONElement",
            "name": "JSONElement",
            "dimension": ""
          }
        ]
      },
      "parameters": [{
        "name": "input",
        "description": "the input content to parse",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.compilers",
      "qualifiedName": "com.eden.orchid.api.compilers.OrchidPreCompiler",
      "name": "OrchidPreCompiler",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "The precompiler is a compiler to be run against files before they are sent to their appropriate OrchidCompiler. Generally,\n this is used to extract data embedded within the file, returning the extracted data and the content after it has had\n its embedded data removed so that the resulting content can be compiled with special options specific to that file."
        }],
        "description": "<p>The precompiler is a compiler to be run against files before they are sent to their appropriate OrchidCompiler. Generally,\nthis is used to extract data embedded within the file, returning the extracted data and the content after it has had\nits embedded data removed so that the resulting content can be compiled with special options specific to that file.<\/p>\n",
        "shortDescription": "The precompiler is a compiler to be run against files before they are sent to their appropriate OrchidCompiler."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/compilers/OrchidPreCompiler"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.docParser",
      "qualifiedName": "com.eden.orchid.api.docParser.OrchidBlockTagHandler",
      "name": "OrchidBlockTagHandler",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A OrchidBlockTagHandler processes Tags within Javadoc comments."
        }],
        "description": "<p>A OrchidBlockTagHandler processes Tags within Javadoc comments.<\/p>\n",
        "shortDescription": "A OrchidBlockTagHandler processes Tags within Javadoc comments."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/docParser/OrchidBlockTagHandler"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "processTag",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tag",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.docParser",
      "qualifiedName": "com.eden.orchid.api.docParser.OrchidInlineTagHandler",
      "name": "OrchidInlineTagHandler",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A OrchidBlockTagHandler processes Tags within Javadoc comments."
        }],
        "description": "<p>A OrchidBlockTagHandler processes Tags within Javadoc comments.<\/p>\n",
        "shortDescription": "A OrchidBlockTagHandler processes Tags within Javadoc comments."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/docParser/OrchidInlineTagHandler"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "startIndexing",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "A callback to build the index of content this OrchidGenerator intends to create."
          }],
          "blockTags": {"return": "a JSONArray or JSONObject containing the index entries"},
          "description": "<p>A callback to build the index of content this OrchidGenerator intends to create.<\/p>\n",
          "shortDescription": "A callback to build the index of content this OrchidGenerator intends to create."
        },
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "startGeneration",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "A callback to begin generating content. The index is fully built and should not be changed at this time."
          }],
          "description": "<p>A callback to begin generating content. The index is fully built and should not be changed at this time.<\/p>\n",
          "shortDescription": "A callback to begin generating content."
        },
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "getName",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return the name of the OrchidGenerator. The index created by this OrchidGenerator is scoped under this name."
          }],
          "blockTags": {"return": "this generator's name"},
          "description": "<p>Return the name of the OrchidGenerator. The index created by this OrchidGenerator is scoped under this name.<\/p>\n",
          "shortDescription": "Return the name of the OrchidGenerator."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return a description of this OrchidGenerator, which is displayed when listing available Generators."
          }],
          "blockTags": {"return": "this generator's description"},
          "description": "<p>Return a description of this OrchidGenerator, which is displayed when listing available Generators.<\/p>\n",
          "shortDescription": "Return a description of this OrchidGenerator, which is displayed when listing available Generators."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.generators",
      "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerator",
      "name": "OrchidGenerator",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "Generators are what create the output pages within Orchid. Generators are run after all Options have been processed\n as part of a OrchidTask. When a OrchidTask is chosen that builds the output site, it happens in two phases: the **indexing\n phase** and the **generation phase**.\n\n ### Indexing Phase\n During the indexing phase, Generators should determine exactly the output pages they intend to generate, returning an\n index of those pages. This index should consist of a JSONArray or JSONObject, wrapped in a JSONElement. The content\n of either should be JSONObjects (either as a list or as a hierarchy) which contain at least the following properties:\n\n * 'name' - the display name of the page\n * 'url' - the url of the target page. This should be absolute using the set baseUrl OrchidOption, which is done automatically\n by OrchidReference\n\n This JSONElement is then placed into the root JSONObject under the key specified by `getName()`. At generation time,\n this index will be used to create deep-links throughout the site, typically through the page navigation or from\n manually creating links, either through Javadoc 'see' or 'link' tags, or using an output filter in the main template.\n\n It is important that **no pages be written during the Indexing phase**. The sites's index is not completed at this\n point, so it is likely that navigation among pages will not work as expected.\n\n ### Generation Phase\n During the Generation phase, Generators can start to write their pages. Typically, this step involves picking a\n template for an OrchidPage and generating a page according to that template. This template should be provided by the\n Theme, but if the Theme did not implement the desired template, Orchid will attempt to find a suitable fallback.\n\n It is also worth noting that templates can be provided by OrchidGenerator extensions apart from a Theme, and when using\n Twig as the main template engine, can be injected into the site's content by extending one of the Theme's layouts,\n which should typically be 'templates/layouts/index.twig'."
        }],
        "description": "<p>Generators are what create the output pages within Orchid. Generators are run after all Options have been processed\nas part of a OrchidTask. When a OrchidTask is chosen that builds the output site, it happens in two phases: the <strong>indexing\nphase<\/strong> and the <strong>generation phase<\/strong>.<\/p>\n<h3>Indexing Phase<\/h3>\n<p>During the indexing phase, Generators should determine exactly the output pages they intend to generate, returning an\nindex of those pages. This index should consist of a JSONArray or JSONObject, wrapped in a JSONElement. The content\nof either should be JSONObjects (either as a list or as a hierarchy) which contain at least the following properties:<\/p>\n<ul>\n<li>'name' - the display name of the page<\/li>\n<li>'url' - the url of the target page. This should be absolute using the set baseUrl OrchidOption, which is done automatically\nby OrchidReference<\/li>\n<\/ul>\n<p>This JSONElement is then placed into the root JSONObject under the key specified by <code>getName()<\/code>. At generation time,\nthis index will be used to create deep-links throughout the site, typically through the page navigation or from\nmanually creating links, either through Javadoc 'see' or 'link' tags, or using an output filter in the main template.<\/p>\n<p>It is important that <strong>no pages be written during the Indexing phase<\/strong>. The sites's index is not completed at this\npoint, so it is likely that navigation among pages will not work as expected.<\/p>\n<h3>Generation Phase<\/h3>\n<p>During the Generation phase, Generators can start to write their pages. Typically, this step involves picking a\ntemplate for an OrchidPage and generating a page according to that template. This template should be provided by the\nTheme, but if the Theme did not implement the desired template, Orchid will attempt to find a suitable fallback.<\/p>\n<p>It is also worth noting that templates can be provided by OrchidGenerator extensions apart from a Theme, and when using\nTwig as the main template engine, can be injected into the site's content by extending one of the Theme's layouts,\nwhich should typically be 'templates/layouts/index.twig'.<\/p>\n",
        "shortDescription": "Generators are what create the output pages within Orchid."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/generators/OrchidGenerator"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "generators",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerator",
          "name": "OrchidGenerator",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "startIndexing",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "indexObject",
          "type": {
            "qualifiedName": "org.json.JSONObject",
            "name": "JSONObject",
            "dimension": ""
          }
        }]
      },
      {
        "name": "startGeneration",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "shouldUseGenerator",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "generator",
          "type": {
            "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerator",
            "name": "OrchidGenerator",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.generators",
      "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerators",
      "name": "OrchidGenerators",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/generators/OrchidGenerators"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "optionLength",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return the number of arguments this OrchidOption is expecting. This number is strictly enforced, and the option will\n only be allowed to parse the command-line option if the number of arguments it finds exactly matches this value.\n\n For each custom option that you want to recognize, optionLength must return the number of separate pieces or\n tokens in the option. For example, we want to be able to use the custom option of the form -tag mytag. This\n option has two pieces, the -tag option itself and its value, so the optionLength method in our doclet must return\n 2 for the -tag option.\n\n An option can return 0 if it isn't expecting any actual command-line option, but does want to add data to the\n 'option' object."
          }],
          "blockTags": {"return": "the length of this option, including the flag itself"},
          "description": "<p>Return the number of arguments this OrchidOption is expecting. This number is strictly enforced, and the option will\nonly be allowed to parse the command-line option if the number of arguments it finds exactly matches this value.<\/p>\n<p>For each custom option that you want to recognize, optionLength must return the number of separate pieces or\ntokens in the option. For example, we want to be able to use the custom option of the form -tag mytag. This\noption has two pieces, the -tag option itself and its value, so the optionLength method in our doclet must return\n2 for the -tag option.<\/p>\n<p>An option can return 0 if it isn't expecting any actual command-line option, but does want to add data to the\n'option' object.<\/p>\n",
          "shortDescription": "Return the number of arguments this OrchidOption is expecting."
        },
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "A callback for when an option on the command-line matches the optionLength or when optionLength is 0. Whatever\n JSONElement is returned will be available in the root JSONObject at `options.{flag}`."
          }],
          "blockTags": {"return": "the data parsed from the command-line option"},
          "description": "<p>A callback for when an option on the command-line matches the optionLength or when optionLength is 0. Whatever\nJSONElement is returned will be available in the root JSONObject at <code>options.{flag}<\/code>.<\/p>\n",
          "shortDescription": "A callback for when an option on the command-line matches the optionLength or when optionLength is 0."
        },
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "description": "the raw values found on the command line. Its length will always be exactly equal to optionLength",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "If this value is not false, this callback is used instead to get a value for this option. Whatever JSONElement is\n returned will be available in the root JSONObject at `options.{flag}`."
          }],
          "blockTags": {"return": "the default value for this OrchidOption"},
          "description": "<p>If this value is not false, this callback is used instead to get a value for this option. Whatever JSONElement is\nreturned will be available in the root JSONObject at <code>options.{flag}<\/code>.<\/p>\n",
          "shortDescription": "If this value is not false, this callback is used instead to get a value for this option."
        },
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "getFlag",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "The name of the flag used on the command-line. This value should _not_ start with a dash, but options specified\n on the command-line _must_ begin with a dash. The value returned by `parseOption` is available in the root\n JSONObject at `options.{flag}`."
          }],
          "blockTags": {"return": "the flag, without any leading dash"},
          "description": "<p>The name of the flag used on the command-line. This value should <em>not<\/em> start with a dash, but options specified\non the command-line <em>must<\/em> begin with a dash. The value returned by <code>parseOption<\/code> is available in the root\nJSONObject at <code>options.{flag}<\/code>.<\/p>\n",
          "shortDescription": "The name of the flag used on the command-line."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return a description of this OrchidOption, which is displayed when listing available Options."
          }],
          "blockTags": {"return": "this option's description"},
          "description": "<p>Return a description of this OrchidOption, which is displayed when listing available Options.<\/p>\n",
          "shortDescription": "Return a description of this OrchidOption, which is displayed when listing available Options."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return true if this OrchidOption must be set before continuing with the Orchid build."
          }],
          "blockTags": {"return": "true if this option is required, false otherwise."},
          "description": "<p>Return true if this OrchidOption must be set before continuing with the Orchid build.<\/p>\n",
          "shortDescription": "Return true if this OrchidOption must be set before continuing with the Orchid build."
        },
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.options",
      "qualifiedName": "com.eden.orchid.api.options.OrchidOption",
      "name": "OrchidOption",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "Denotes a Javadoc-style command-line argument."
        }],
        "description": "<p>Denotes a Javadoc-style command-line argument.<\/p>\n",
        "shortDescription": "Denotes a Javadoc-style command-line argument."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/options/OrchidOption"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "options",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.options.OrchidOption",
          "name": "OrchidOption",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "parseOptions",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "optionsMap",
            "type": {
              "qualifiedName": "java.util.Map",
              "name": "Map",
              "dimension": "",
              "typeParameters": [
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": ""
                },
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": "[]"
                }
              ]
            }
          },
          {
            "name": "siteOptions",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "shouldContinue",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "qualifiedName": "java.util.Set",
              "name": "Set",
              "dimension": "",
              "typeParameters": [{
                "qualifiedName": "com.eden.orchid.api.options.OrchidOption",
                "name": "OrchidOption",
                "dimension": ""
              }]
            }
          },
          {
            "name": "optionFlag",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.options",
      "qualifiedName": "com.eden.orchid.api.options.OrchidOptions",
      "name": "OrchidOptions",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/options/OrchidOptions"
    }
  },
  {
    "constructors": [],
    "methods": [
      {
        "name": "bootstrap",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "optionsMap",
            "type": {
              "qualifiedName": "java.util.Map",
              "name": "Map",
              "dimension": "",
              "typeParameters": [
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": ""
                },
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": "[]"
                }
              ]
            }
          },
          {
            "name": "rootDoc",
            "type": {
              "qualifiedName": "com.sun.javadoc.RootDoc",
              "name": "RootDoc",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "runTask",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "taskName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "build",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "query",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "pointer",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getTheme",
        "returns": {
          "qualifiedName": "com.eden.orchid.Theme",
          "name": "Theme",
          "dimension": ""
        }
      },
      {
        "name": "setTheme",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "theme",
          "type": {
            "qualifiedName": "com.eden.orchid.Theme",
            "name": "Theme",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getRoot",
        "returns": {
          "qualifiedName": "org.json.JSONObject",
          "name": "JSONObject",
          "dimension": ""
        }
      },
      {
        "name": "getRootDoc",
        "returns": {
          "qualifiedName": "com.sun.javadoc.RootDoc",
          "name": "RootDoc",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api",
      "qualifiedName": "com.eden.orchid.api.OrchidContext",
      "name": "OrchidContext",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/OrchidContext"
    }
  },
  {
    "constructors": [],
    "methods": [
      {
        "name": "getContext",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.OrchidContext",
          "name": "OrchidContext",
          "dimension": ""
        }
      },
      {
        "name": "getInjector",
        "returns": {
          "qualifiedName": "com.google.inject.Injector",
          "name": "Injector",
          "dimension": ""
        }
      },
      {
        "name": "getTheme",
        "returns": {
          "qualifiedName": "com.eden.orchid.Theme",
          "name": "Theme",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.registration",
      "qualifiedName": "com.eden.orchid.api.registration.Contextual",
      "name": "Contextual",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/registration/Contextual"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getPriority",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "setPriority",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "priority",
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "dimension": ""
          }
        }]
      },
      {
        "name": "compareTo",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        },
        "parameters": [{
          "name": "o",
          "type": {
            "qualifiedName": "com.eden.orchid.api.registration.Prioritized",
            "name": "Prioritized",
            "dimension": ""
          }
        }]
      },
      {
        "name": "equals",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "o",
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "dimension": ""
          }
        }]
      },
      {
        "name": "hashCode",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [{
      "name": "priority",
      "type": {
        "qualifiedName": "int",
        "name": "int",
        "dimension": ""
      }
    }],
    "info": {
      "package": "com.eden.orchid.api.registration",
      "qualifiedName": "com.eden.orchid.api.registration.Prioritized",
      "name": "Prioritized",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/registration/Prioritized"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "resource",
      "type": {
        "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
        "name": "OrchidResource",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "renderTemplate",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Render a template from a resource file"
          }],
          "description": "<p>Render a template from a resource file<\/p>\n",
          "shortDescription": "Render a template from a resource file"
        },
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "templateName",
          "description": "the full relative name of the template to render",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "renderString",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Render a template from a string using the given file extension to find the appropriate compilers"
          }],
          "description": "<p>Render a template from a string using the given file extension to find the appropriate compilers<\/p>\n",
          "shortDescription": "Render a template from a string using the given file extension to find the appropriate compilers"
        },
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "template",
          "description": "the content of a 'template' to render",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "renderRawContent",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Render the contents of your resource directly"
          }],
          "description": "<p>Render the contents of your resource directly<\/p>\n",
          "shortDescription": "Render the contents of your resource directly"
        },
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "setResources",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "resources",
          "type": {
            "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
            "name": "OrchidResources",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.resources",
      "qualifiedName": "com.eden.orchid.api.resources.OrchidPage",
      "name": "OrchidPage",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/resources/OrchidPage"
    }
  },
  {
    "constructors": [
      {},
      {"parameters": [{
        "name": "fullFileName",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }]},
      {"parameters": [
        {
          "name": "basePath",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        },
        {
          "name": "fullFileName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }
      ]},
      {"parameters": [{
        "name": "source",
        "type": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
          "name": "OrchidReference",
          "dimension": ""
        }
      }]}
    ],
    "methods": [
      {
        "name": "getBaseUrl",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setBaseUrl",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "baseUrl",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getBasePath",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setBasePath",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "basePath",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "stripBasePath",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "basePath",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getPath",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getFullPath",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setPath",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "path",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getFileName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setFileName",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getOutputExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setExtension",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "extension",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getId",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setId",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "id",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getTitle",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "setTitle",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "title",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "isUsePrettyUrl",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      },
      {
        "name": "setUsePrettyUrl",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "usePrettyUrl",
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "dimension": ""
          }
        }]
      },
      {
        "name": "toString",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.resources",
      "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
      "name": "OrchidReference",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/resources/OrchidReference"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "reference",
      "type": {
        "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
        "name": "OrchidReference",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "getContent",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getRawContent",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getEmbeddedData",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "queryEmbeddedData",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "pointer",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getReference",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
          "name": "OrchidReference",
          "dimension": ""
        }
      },
      {
        "name": "setReference",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "reference",
          "type": {
            "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
            "name": "OrchidReference",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getPriority",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "setEmbeddedData",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "embeddedData",
          "type": {
            "qualifiedName": "com.eden.common.json.JSONElement",
            "name": "JSONElement",
            "dimension": ""
          }
        }]
      },
      {
        "name": "setPriority",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "priority",
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [
      {
        "name": "reference",
        "type": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
          "name": "OrchidReference",
          "dimension": ""
        }
      },
      {
        "name": "rawContent",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "content",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "embeddedData",
        "type": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "priority",
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "info": {
      "package": "com.eden.orchid.api.resources",
      "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
      "name": "OrchidResource",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/resources/OrchidResource"
    }
  },
  {
    "constructors": [],
    "methods": [
      {
        "name": "getResourceDirEntry",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Gets a single OrchidResource from the directory declared by the 'resourcesDir' option. Themes and other\n registered resource sources are not considered."
          }],
          "blockTags": {"return": "an OrchidResource if it can be found, null otherwise"},
          "description": "<p>Gets a single OrchidResource from the directory declared by the 'resourcesDir' option. Themes and other\nregistered resource sources are not considered.<\/p>\n",
          "shortDescription": "Gets a single OrchidResource from the directory declared by the 'resourcesDir' option."
        },
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "description": "the file path and name to find",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getResourceEntry",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Gets a single OrchidResource. The 'resourcesDir' directory is first searched, and then all registered\n ResourceSources (which include themes) in order of priority."
          }],
          "blockTags": {"return": "an OrchidResource if it can be found, null otherwise"},
          "description": "<p>Gets a single OrchidResource. The 'resourcesDir' directory is first searched, and then all registered\nResourceSources (which include themes) in order of priority.<\/p>\n",
          "shortDescription": "Gets a single OrchidResource."
        },
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "description": "the file path and name to find",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getResourceDirEntries",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Finds all OrchidResources in a given directory in the 'resources directory' that contain one of the declared file\n extensions. Themes and other registered resource sources are not considered. If no extensions are specified, all\n files in the given directory are returned. If recursive is true, the declared directory and all subdirectories\n are searched instead of just the declared directory."
          }],
          "blockTags": {"return": "a list of all OrchidResources found"},
          "description": "<p>Finds all OrchidResources in a given directory in the 'resources directory' that contain one of the declared file\nextensions. Themes and other registered resource sources are not considered. If no extensions are specified, all\nfiles in the given directory are returned. If recursive is true, the declared directory and all subdirectories\nare searched instead of just the declared directory.<\/p>\n",
          "shortDescription": "Finds all OrchidResources in a given directory in the 'resources directory' that contain one of the declared file\n extensions."
        },
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
            "name": "OrchidResource",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "dirName",
            "description": "the path to search in",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "description": "a list of extensions to match files on (optional)",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "description": "whether to also search subdirectories",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getResourceEntries",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Finds all OrchidResources in a given directory in all registered ResourceSources. The 'resourcesDir' directory is\n first searched, and then all registered ResourceSources (which include themes) in order of priority. If no\n extensions are specified, all files in the given directory are returned. If recursive is true, the declared\n directory and all subdirectories are searched instead of just the declared directory."
          }],
          "blockTags": {"return": "a list of all OrchidResources found"},
          "description": "<p>Finds all OrchidResources in a given directory in all registered ResourceSources. The 'resourcesDir' directory is\nfirst searched, and then all registered ResourceSources (which include themes) in order of priority. If no\nextensions are specified, all files in the given directory are returned. If recursive is true, the declared\ndirectory and all subdirectories are searched instead of just the declared directory.<\/p>\n",
          "shortDescription": "Finds all OrchidResources in a given directory in all registered ResourceSources."
        },
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
            "name": "OrchidResource",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "dirName",
            "description": "the path to search in",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "description": "a list of extensions to match files on (optional)",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "description": "whether to also search subdirectories",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getProjectReadme",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Find the projects README file"
          }],
          "blockTags": {"return": "an OrchidResource containing the README content if it was found, null otherwise"},
          "description": "<p>Find the projects README file<\/p>\n",
          "shortDescription": "Find the projects README file"
        },
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        }
      },
      {
        "name": "getProjectLicense",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Find the projects License file"
          }],
          "blockTags": {"return": "an OrchidResource containing the License content if it was found, null otherwise"},
          "description": "<p>Find the projects License file<\/p>\n",
          "shortDescription": "Find the projects License file"
        },
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        }
      },
      {
        "name": "render",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "templateReference",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          },
          {
            "name": "pageData",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          },
          {
            "name": "alias",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "reference",
            "type": {
              "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
              "name": "OrchidReference",
              "dimension": ""
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.resources",
      "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
      "name": "OrchidResources",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/resources/OrchidResources"
    }
  },
  {
    "constructors": [{}],
    "methods": [],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.resources",
      "qualifiedName": "com.eden.orchid.api.resources.OrchidResourceSource",
      "name": "OrchidResourceSource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "Resources in Orchid are hierarchical, and trying to find a Resource from the OrchidResouces will return the first\n one it finds in the following order:\n\n 1) A file in the directory specified by -resourcesDir\n 2) An entry from a OrchidResourceSource, with higher priority given preference.\n\n This is accomplished by finding the Jarfile in which a particular OrchidResourceSource is contained within, and then\n looking for an entry in that jar matching a given path. Having a higher priority means the jar associated with this\n OrchidResourceSource is searched before other Jars."
        }],
        "description": "<p>Resources in Orchid are hierarchical, and trying to find a Resource from the OrchidResouces will return the first\none it finds in the following order:<\/p>\n<ol>\n<li>A file in the directory specified by -resourcesDir<\/li>\n<li>An entry from a OrchidResourceSource, with higher priority given preference.<\/li>\n<\/ol>\n<p>This is accomplished by finding the Jarfile in which a particular OrchidResourceSource is contained within, and then\nlooking for an entry in that jar matching a given path. Having a higher priority means the jar associated with this\nOrchidResourceSource is searched before other Jars.<\/p>\n",
        "shortDescription": "Resources in Orchid are hierarchical, and trying to find a Resource from the OrchidResouces will return the first\n one it finds in the following order:\n\n 1) A file in the directory specified by -resourcesDir\n 2) An entry from a OrchidResourceSource, with higher priority given preference."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/resources/OrchidResourceSource"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return the name of this OrchidTask"
          }],
          "blockTags": {"return": "the name of this task"},
          "description": "<p>Return the name of this OrchidTask<\/p>\n",
          "shortDescription": "Return the name of this OrchidTask"
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Return a description of what this OrchidTask does, which is displayed when listing available Tasks."
          }],
          "blockTags": {"return": "the description of this OrchidTask"},
          "description": "<p>Return a description of what this OrchidTask does, which is displayed when listing available Tasks.<\/p>\n",
          "shortDescription": "Return a description of what this OrchidTask does, which is displayed when listing available Tasks."
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.tasks",
      "qualifiedName": "com.eden.orchid.api.tasks.OrchidTask",
      "name": "OrchidTask",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A Runnable tailored for executing some task in Orchid. The 'name' of this OrchidTask is used on the command-line for\n non-Javadoc builds to execute an alternative OrchidTask. The default OrchidTask builds the site once."
        }],
        "description": "<p>A Runnable tailored for executing some task in Orchid. The 'name' of this OrchidTask is used on the command-line for\nnon-Javadoc builds to execute an alternative OrchidTask. The default OrchidTask builds the site once.<\/p>\n",
        "shortDescription": "A Runnable tailored for executing some task in Orchid."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/tasks/OrchidTask"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "tasks",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.tasks.OrchidTask",
          "name": "OrchidTask",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [{
      "name": "run",
      "returns": {
        "qualifiedName": "void",
        "name": "void",
        "dimension": ""
      },
      "parameters": [{
        "name": "taskName",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }]
    }],
    "fields": [
      {
        "name": "defaultTask",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "loggerKey",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }
    ],
    "info": {
      "package": "com.eden.orchid.api.tasks",
      "qualifiedName": "com.eden.orchid.api.tasks.OrchidTasks",
      "name": "OrchidTasks",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/tasks/OrchidTasks"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "isActive",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      },
      {
        "name": "log",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "tag",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "message",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "log",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "tag",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "message",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "throwable",
            "type": {
              "qualifiedName": "java.lang.Throwable",
              "name": "Throwable",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "priority",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.api.tasks",
      "qualifiedName": "com.eden.orchid.api.tasks.OrchidTasks.TaskLogger",
      "name": "TaskLogger",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/api/tasks/OrchidTasks/TaskLogger"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "getEmbeddedData",
      "returns": {
        "qualifiedName": "com.eden.common.util.EdenPair",
        "name": "EdenPair",
        "dimension": "",
        "typeParameters": [
          {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          },
          {
            "qualifiedName": "com.eden.common.json.JSONElement",
            "name": "JSONElement",
            "dimension": ""
          }
        ]
      },
      "parameters": [{
        "name": "input",
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.frontmatter",
      "qualifiedName": "com.eden.orchid.impl.compilers.frontmatter.FrontMatterPrecompiler",
      "name": "FrontMatterPrecompiler",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/frontmatter/FrontMatterPrecompiler"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.CompileAsFilter",
      "name": "CompileAsFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/CompileAsFilter"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      },
      {
        "name": "apply",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": ""
            }
          },
          {
            "name": "params",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.JsonFilter",
      "name": "JsonFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/JsonFilter"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "functionSet",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "org.jtwig.functions.JtwigFunction",
            "name": "JtwigFunction",
            "dimension": ""
          }]
        }
      },
      {
        "name": "loaderSet",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "org.jtwig.resource.loader.TypedResourceLoader",
            "name": "TypedResourceLoader",
            "dimension": ""
          }]
        }
      }
    ]}],
    "methods": [
      {
        "name": "compile",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "source",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "data",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "getOutputExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getSourceExtensions",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.JTwigCompiler",
      "name": "JTwigCompiler",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/JTwigCompiler"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "configure",
      "returns": {
        "qualifiedName": "void",
        "name": "void",
        "dimension": ""
      }
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.JTwigModule",
      "name": "JTwigModule",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/JTwigModule"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "resources",
      "type": {
        "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
        "name": "OrchidResources",
        "dimension": ""
      }
    }]}],
    "methods": [],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.JTwigResourceLoader",
      "name": "JTwigResourceLoader",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/JTwigResourceLoader"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.LinkFilter",
      "name": "LinkFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/LinkFilter"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      },
      {
        "name": "apply",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": ""
            }
          },
          {
            "name": "params",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.QueryFilter",
      "name": "QueryFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/QueryFilter"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      },
      {
        "name": "isArray",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "value",
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "dimension": ""
          }
        }]
      },
      {
        "name": "asArray",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": "[]"
        },
        "parameters": [{
          "name": "value",
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "dimension": ""
          }
        }]
      },
      {
        "name": "asString",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "value",
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.SortByFilter",
      "name": "SortByFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/SortByFilter"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "name",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "aliases",
        "returns": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        }
      },
      {
        "name": "execute",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [{
          "name": "request",
          "type": {
            "qualifiedName": "org.jtwig.functions.FunctionRequest",
            "name": "FunctionRequest",
            "dimension": ""
          }
        }]
      },
      {
        "name": "apply",
        "returns": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": ""
            }
          },
          {
            "name": "params",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "walkObject",
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": []
        },
        "parameters": [
          {
            "name": "object",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          },
          {
            "name": "stop",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.jtwig",
      "qualifiedName": "com.eden.orchid.impl.compilers.jtwig.WalkMapFilter",
      "name": "WalkMapFilter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/jtwig/WalkMapFilter"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "compile",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "source",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "data",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "getOutputExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getSourceExtensions",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.markdown",
      "qualifiedName": "com.eden.orchid.impl.compilers.markdown.MarkdownCompiler",
      "name": "MarkdownCompiler",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/markdown/MarkdownCompiler"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "importer",
      "type": {
        "qualifiedName": "com.eden.orchid.impl.compilers.sass.SassImporter",
        "name": "SassImporter",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "getSourceExtensions",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      },
      {
        "name": "getOutputExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "compile",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "input",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "data",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "getIgnoredPatterns",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": "[]"
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.sass",
      "qualifiedName": "com.eden.orchid.impl.compilers.sass.SassCompiler",
      "name": "SassCompiler",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/sass/SassCompiler"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "context",
        "type": {
          "qualifiedName": "com.eden.orchid.api.OrchidContext",
          "name": "OrchidContext",
          "dimension": ""
        }
      },
      {
        "name": "resources",
        "type": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
          "name": "OrchidResources",
          "dimension": ""
        }
      }
    ]}],
    "methods": [{
      "name": "apply",
      "returns": {
        "qualifiedName": "java.util.Collection",
        "name": "Collection",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "io.bit3.jsass.importer.Import",
          "name": "Import",
          "dimension": ""
        }]
      },
      "parameters": [
        {
          "name": "url",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        },
        {
          "name": "previous",
          "type": {
            "qualifiedName": "io.bit3.jsass.importer.Import",
            "name": "Import",
            "dimension": ""
          }
        }
      ]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.compilers.sass",
      "qualifiedName": "com.eden.orchid.impl.compilers.sass.SassImporter",
      "name": "SassImporter",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/compilers/sass/SassImporter"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "orchidTasks",
        "type": {
          "qualifiedName": "com.eden.orchid.api.tasks.OrchidTasks",
          "name": "OrchidTasks",
          "dimension": ""
        }
      },
      {
        "name": "options",
        "type": {
          "qualifiedName": "com.eden.orchid.api.options.OrchidOptions",
          "name": "OrchidOptions",
          "dimension": ""
        }
      },
      {
        "name": "generators",
        "type": {
          "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerators",
          "name": "OrchidGenerators",
          "dimension": ""
        }
      }
    ]}],
    "methods": [
      {
        "name": "bootstrap",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "optionsMap",
            "type": {
              "qualifiedName": "java.util.Map",
              "name": "Map",
              "dimension": "",
              "typeParameters": [
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": ""
                },
                {
                  "qualifiedName": "java.lang.String",
                  "name": "String",
                  "dimension": "[]"
                }
              ]
            }
          },
          {
            "name": "rootDoc",
            "type": {
              "qualifiedName": "com.sun.javadoc.RootDoc",
              "name": "RootDoc",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "runTask",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "taskName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "build",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "query",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "pointer",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl",
      "qualifiedName": "com.eden.orchid.impl.Context",
      "name": "Context",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/Context"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "getAnnotations",
      "returns": {
        "qualifiedName": "org.json.JSONArray",
        "name": "JSONArray",
        "dimension": ""
      },
      "parameters": [{
        "name": "doc",
        "type": {
          "qualifiedName": "com.sun.javadoc.ProgramElementDoc",
          "name": "ProgramElementDoc",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.AnnotationParser",
      "name": "AnnotationParser",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/AnnotationParser"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "commentParser",
        "type": {
          "qualifiedName": "com.eden.orchid.impl.docParser.docs.CommentParser",
          "name": "CommentParser",
          "dimension": ""
        }
      },
      {
        "name": "annotationParser",
        "type": {
          "qualifiedName": "com.eden.orchid.impl.docParser.docs.AnnotationParser",
          "name": "AnnotationParser",
          "dimension": ""
        }
      },
      {
        "name": "typeParser",
        "type": {
          "qualifiedName": "com.eden.orchid.impl.docParser.docs.TypeParser",
          "name": "TypeParser",
          "dimension": ""
        }
      },
      {
        "name": "parameterParser",
        "type": {
          "qualifiedName": "com.eden.orchid.impl.docParser.docs.ParameterParser",
          "name": "ParameterParser",
          "dimension": ""
        }
      }
    ]}],
    "methods": [
      {
        "name": "loadClassData",
        "returns": {
          "qualifiedName": "org.json.JSONObject",
          "name": "JSONObject",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getBasicClassObject",
        "returns": {
          "qualifiedName": "org.json.JSONObject",
          "name": "JSONObject",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getReference",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
          "name": "OrchidReference",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getClassInfo",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Gets the basic information describing the class as a whole: its package, name, type parameters, superclass,\n implemented interfaces, annotations, and comments."
          }],
          "blockTags": {"return": "the collected info"},
          "description": "<p>Gets the basic information describing the class as a whole: its package, name, type parameters, superclass,\nimplemented interfaces, annotations, and comments.<\/p>\n",
          "shortDescription": "Gets the basic information describing the class as a whole: its package, name, type parameters, superclass,\n implemented interfaces, annotations, and comments."
        },
        "returns": {
          "qualifiedName": "org.json.JSONObject",
          "name": "JSONObject",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "description": "the classdoc to extract information for",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getClassConstructors",
        "returns": {
          "qualifiedName": "org.json.JSONArray",
          "name": "JSONArray",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getClassMethods",
        "returns": {
          "qualifiedName": "org.json.JSONArray",
          "name": "JSONArray",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getClassFields",
        "returns": {
          "qualifiedName": "org.json.JSONArray",
          "name": "JSONArray",
          "dimension": ""
        },
        "parameters": [{
          "name": "classDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.ClassDoc",
            "name": "ClassDoc",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.ClassDocParser",
      "name": "ClassDocParser",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/ClassDocParser"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "blockTagHandlers",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.docParser.OrchidBlockTagHandler",
            "name": "OrchidBlockTagHandler",
            "dimension": ""
          }]
        }
      },
      {
        "name": "inlineTagHandlers",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.docParser.OrchidInlineTagHandler",
            "name": "OrchidInlineTagHandler",
            "dimension": ""
          }]
        }
      }
    ]}],
    "methods": [{
      "name": "getCommentObject",
      "returns": {
        "qualifiedName": "org.json.JSONObject",
        "name": "JSONObject",
        "dimension": ""
      },
      "parameters": [{
        "name": "doc",
        "type": {
          "qualifiedName": "com.sun.javadoc.Doc",
          "name": "Doc",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.CommentParser",
      "name": "CommentParser",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/CommentParser"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "typeParser",
      "type": {
        "qualifiedName": "com.eden.orchid.impl.docParser.docs.TypeParser",
        "name": "TypeParser",
        "dimension": ""
      }
    }]}],
    "methods": [{
      "name": "getParameters",
      "returns": {
        "qualifiedName": "org.json.JSONArray",
        "name": "JSONArray",
        "dimension": ""
      },
      "parameters": [{
        "name": "doc",
        "type": {
          "qualifiedName": "com.sun.javadoc.ExecutableMemberDoc",
          "name": "ExecutableMemberDoc",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.ParameterParser",
      "name": "ParameterParser",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/ParameterParser"
    }
  },
  {
    "constructors": [{}],
    "methods": [],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.ParserUtils",
      "name": "ParserUtils",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/ParserUtils"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "getTypeObject",
      "returns": {
        "qualifiedName": "org.json.JSONObject",
        "name": "JSONObject",
        "dimension": ""
      },
      "parameters": [{
        "name": "type",
        "type": {
          "qualifiedName": "com.sun.javadoc.Type",
          "name": "Type",
          "dimension": ""
        }
      }]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.docs",
      "qualifiedName": "com.eden.orchid.impl.docParser.docs.TypeParser",
      "name": "TypeParser",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/docs/TypeParser"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.AuthorTag",
      "name": "AuthorTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/AuthorTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.DeprecatedTag",
      "name": "DeprecatedTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/DeprecatedTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.ExceptionTag",
      "name": "ExceptionTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/ExceptionTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTag",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tag",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.LinkTag",
      "name": "LinkTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/LinkTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.ReturnTag",
      "name": "ReturnTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/ReturnTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.SeeTag",
      "name": "SeeTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/SeeTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.SinceTag",
      "name": "SinceTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/SinceTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.ThrowsTag",
      "name": "ThrowsTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/ThrowsTag"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "processTags",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.docParser.tags",
      "qualifiedName": "com.eden.orchid.impl.docParser.tags.VersionTag",
      "name": "VersionTag",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/docParser/tags/VersionTag"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "resources",
      "type": {
        "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
        "name": "OrchidResources",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "startIndexing",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "startGeneration",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.generators",
      "qualifiedName": "com.eden.orchid.impl.generators.AssetsGenerator",
      "name": "AssetsGenerator",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/generators/AssetsGenerator"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "startIndexing",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "startGeneration",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [{
      "name": "externalClasses",
      "type": {
        "qualifiedName": "org.json.JSONArray",
        "name": "JSONArray",
        "dimension": ""
      }
    }],
    "info": {
      "package": "com.eden.orchid.impl.generators",
      "qualifiedName": "com.eden.orchid.impl.generators.ExternalIndexGenerator",
      "name": "ExternalIndexGenerator",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/generators/ExternalIndexGenerator"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "classDocParser",
      "type": {
        "qualifiedName": "com.eden.orchid.impl.docParser.docs.ClassDocParser",
        "name": "ClassDocParser",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "# InternalIndexGenerator\n\n **generate pages for internal classes** _like a boss_"
          }],
          "description": "<h1>InternalIndexGenerator<\/h1>\n<p><strong>generate pages for internal classes<\/strong> <em>like a boss<\/em><\/p>\n",
          "shortDescription": "# InternalIndexGenerator\n\n **generate pages for internal classes** _like a boss_"
        },
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "startIndexing",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "startGeneration",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [{
      "name": "internalClasses",
      "type": {
        "qualifiedName": "org.json.JSONArray",
        "name": "JSONArray",
        "dimension": ""
      }
    }],
    "info": {
      "package": "com.eden.orchid.impl.generators",
      "qualifiedName": "com.eden.orchid.impl.generators.InternalIndexGenerator",
      "name": "InternalIndexGenerator",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/generators/InternalIndexGenerator"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "startIndexing",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "startGeneration",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.generators",
      "qualifiedName": "com.eden.orchid.impl.generators.MetadataGenerator",
      "name": "MetadataGenerator",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/generators/MetadataGenerator"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "configure",
      "returns": {
        "qualifiedName": "void",
        "name": "void",
        "dimension": ""
      }
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl",
      "qualifiedName": "com.eden.orchid.impl.ImplModule",
      "name": "ImplModule",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/ImplModule"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.BaseUrlOption",
      "name": "BaseUrlOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/BaseUrlOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.CommentLanguageOption",
      "name": "CommentLanguageOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/CommentLanguageOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.ConfigOption",
      "name": "ConfigOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/ConfigOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.DataFilesOption",
      "name": "DataFilesOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/DataFilesOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.DestinationOption",
      "name": "DestinationOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/DestinationOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.DisabledGeneratorsOption",
      "name": "DisabledGeneratorsOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/DisabledGeneratorsOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.EnvironmentOption",
      "name": "EnvironmentOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/EnvironmentOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.ResourcesOption",
      "name": "ResourcesOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/ResourcesOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.ThemeOption",
      "name": "ThemeOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/ThemeOption"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getFlag",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "parseOption",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "options",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "getDefaultValue",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "optionLength",
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        }
      },
      {
        "name": "isRequired",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.options",
      "qualifiedName": "com.eden.orchid.impl.options.VersionOption",
      "name": "VersionOption",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/options/VersionOption"
    }
  },
  {
    "constructors": [
      {"parameters": [{
        "name": "file",
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "dimension": ""
        }
      }]},
      {"parameters": [
        {
          "name": "file",
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "dimension": ""
          }
        },
        {
          "name": "reference",
          "type": {
            "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
            "name": "OrchidReference",
            "dimension": ""
          }
        }
      ]}
    ],
    "methods": [{
      "name": "loadContent",
      "returns": {
        "qualifiedName": "void",
        "name": "void",
        "dimension": ""
      }
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.FileResource",
      "name": "FileResource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A Resource type that provides a content to a template from a resource file on disk. When used with\n renderTemplate() or renderString(), this resource will supply the `page.content` variable to the template renderer as\n the file contents after having the embedded data removed, and any embedded data will be available in the renderer\n through the `page` variable. When used with renderRaw(), the raw contents (after having the embedded data removed)\n will be written directly instead."
        }],
        "description": "<p>A Resource type that provides a content to a template from a resource file on disk. When used with\nrenderTemplate() or renderString(), this resource will supply the <code>page.content<\/code> variable to the template renderer as\nthe file contents after having the embedded data removed, and any embedded data will be available in the renderer\nthrough the <code>page<\/code> variable. When used with renderRaw(), the raw contents (after having the embedded data removed)\nwill be written directly instead.<\/p>\n",
        "shortDescription": "A Resource type that provides a content to a template from a resource file on disk."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/FileResource"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "reference",
      "type": {
        "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
        "name": "OrchidReference",
        "dimension": ""
      }
    }]}],
    "methods": [
      {
        "name": "loadContent",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "free",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "getContent",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getRawContent",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getEmbeddedData",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "queryEmbeddedData",
        "returns": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        },
        "parameters": [{
          "name": "pointer",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.FreeableResource",
      "name": "FreeableResource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "An abstract concept of a 'freeable' resource, that is one that is able to look its contents back up, and so can be\n safely 'freed' when requested to save memory. Such an example would be a file, because having a reference to the\n file makes it possible to get rid of the actual contents when needed because the file can be read back into memory\n when the data is needed."
        }],
        "description": "<p>An abstract concept of a 'freeable' resource, that is one that is able to look its contents back up, and so can be\nsafely 'freed' when requested to save memory. Such an example would be a file, because having a reference to the\nfile makes it possible to get rid of the actual contents when needed because the file can be read back into memory\nwhen the data is needed.<\/p>\n",
        "shortDescription": "An abstract concept of a 'freeable' resource, that is one that is able to look its contents back up, and so can be\n safely 'freed' when requested to save memory."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/FreeableResource"
    }
  },
  {
    "constructors": [
      {"parameters": [
        {
          "name": "jarFile",
          "type": {
            "qualifiedName": "java.util.jar.JarFile",
            "name": "JarFile",
            "dimension": ""
          }
        },
        {
          "name": "jarEntry",
          "type": {
            "qualifiedName": "java.util.jar.JarEntry",
            "name": "JarEntry",
            "dimension": ""
          }
        }
      ]},
      {"parameters": [
        {
          "name": "jarFile",
          "type": {
            "qualifiedName": "java.util.jar.JarFile",
            "name": "JarFile",
            "dimension": ""
          }
        },
        {
          "name": "jarEntry",
          "type": {
            "qualifiedName": "java.util.jar.JarEntry",
            "name": "JarEntry",
            "dimension": ""
          }
        },
        {
          "name": "reference",
          "type": {
            "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
            "name": "OrchidReference",
            "dimension": ""
          }
        }
      ]}
    ],
    "methods": [{
      "name": "loadContent",
      "returns": {
        "qualifiedName": "void",
        "name": "void",
        "dimension": ""
      }
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.JarResource",
      "name": "JarResource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A Resource type that provides a content to a template from a resource file contained with a jarfile. When used with\n renderTemplate() or renderString(), this resource will supply the `page.content` variable to the template renderer as\n the file contents after having the embedded data removed, and any embedded data will be available in the renderer\n through the `page` variable. When used with renderRaw(), the raw contents (after having the embedded data removed)\n will be written directly instead."
        }],
        "description": "<p>A Resource type that provides a content to a template from a resource file contained with a jarfile. When used with\nrenderTemplate() or renderString(), this resource will supply the <code>page.content<\/code> variable to the template renderer as\nthe file contents after having the embedded data removed, and any embedded data will be available in the renderer\nthrough the <code>page<\/code> variable. When used with renderRaw(), the raw contents (after having the embedded data removed)\nwill be written directly instead.<\/p>\n",
        "shortDescription": "A Resource type that provides a content to a template from a resource file contained with a jarfile."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/JarResource"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "element",
        "type": {
          "qualifiedName": "com.eden.common.json.JSONElement",
          "name": "JSONElement",
          "dimension": ""
        }
      },
      {
        "name": "reference",
        "type": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
          "name": "OrchidReference",
          "dimension": ""
        }
      }
    ]}],
    "methods": [],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.JsonResource",
      "name": "JsonResource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A Resource type that provides a JSON data as content to a template. When used with renderTemplate() or renderString(),\n this resource will supply additional data to the template renderer. When used with renderRaw(), the raw JSON-encoded\n data will be written directly instead."
        }],
        "description": "<p>A Resource type that provides a JSON data as content to a template. When used with renderTemplate() or renderString(),\nthis resource will supply additional data to the template renderer. When used with renderRaw(), the raw JSON-encoded\ndata will be written directly instead.<\/p>\n",
        "shortDescription": "A Resource type that provides a JSON data as content to a template."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/JsonResource"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "jarForClass",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Returns the jar file used to load class clazz, or null if clazz was not loaded from a jar."
          }],
          "blockTags": {"return": "the JarFile for a given class, or null if the class was not loaded from a jar"},
          "description": "<p>Returns the jar file used to load class clazz, or null if clazz was not loaded from a jar.<\/p>\n",
          "shortDescription": "Returns the jar file used to load class clazz, or null if clazz was not loaded from a jar."
        },
        "returns": {
          "qualifiedName": "java.util.jar.JarFile",
          "name": "JarFile",
          "dimension": ""
        },
        "parameters": [{
          "name": "clazz",
          "description": "the class to load a jar from",
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "dimension": "",
            "typeParameters": [{
              "qualifiedName": "?",
              "name": "?",
              "dimension": "",
              "wildcardType": {}
            }]
          }
        }]
      },
      {
        "name": "getResourceDirEntry",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getResourceEntry",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getResourceDirEntries",
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
            "name": "OrchidResource",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "dirName",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getResourceEntries",
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
            "name": "OrchidResource",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "dirName",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getJarEntryFileName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "jarEntry",
          "type": {
            "qualifiedName": "java.util.jar.JarEntry",
            "name": "JarEntry",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getResourceFile",
        "returns": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "dimension": ""
        },
        "parameters": [{
          "name": "fileName",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getJarFile",
        "returns": {
          "qualifiedName": "java.util.jar.JarEntry",
          "name": "JarEntry",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "jarfile",
            "type": {
              "qualifiedName": "java.util.jar.JarFile",
              "name": "JarFile",
              "dimension": ""
            }
          },
          {
            "name": "fileName",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getResourceFiles",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Get the resource Files that are in the given path and match the given file extensions. If the -resourcesDir\n option is set, search in that directory, otherwise search in the default project resources directory."
          }],
          "blockTags": {"return": "the list of matching Files"},
          "description": "<p>Get the resource Files that are in the given path and match the given file extensions. If the -resourcesDir\noption is set, search in that directory, otherwise search in the default project resources directory.<\/p>\n",
          "shortDescription": "Get the resource Files that are in the given path and match the given file extensions."
        },
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.io.File",
            "name": "File",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "path",
            "description": "the relative path to find files in",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "description": "the file extensions to filter files by",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "description": "whether to recursively search all subdirectories in the given path",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getJarResourceFiles",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Get the entries from a Jar that are in the given path and match the given file extensions."
          }],
          "blockTags": {"return": "the list of matching JarEntries"},
          "description": "<p>Get the entries from a Jar that are in the given path and match the given file extensions.<\/p>\n",
          "shortDescription": "Get the entries from a Jar that are in the given path and match the given file extensions."
        },
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.util.jar.JarEntry",
            "name": "JarEntry",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "jarfile",
            "description": "the JarFile to search for resources",
            "type": {
              "qualifiedName": "java.util.jar.JarFile",
              "name": "JarFile",
              "dimension": ""
            }
          },
          {
            "name": "path",
            "description": "the path to search in the Jar",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "fileExtensions",
            "description": "(optional) the list of extensions to match the entries",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": "[]"
            }
          },
          {
            "name": "recursive",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getRelativeFilename",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "sourcePath",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "baseDir",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getProjectReadme",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        }
      },
      {
        "name": "getProjectLicense",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
          "name": "OrchidResource",
          "dimension": ""
        }
      },
      {
        "name": "render",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "template",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "templateReference",
            "type": {
              "qualifiedName": "boolean",
              "name": "boolean",
              "dimension": ""
            }
          },
          {
            "name": "pageData",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          },
          {
            "name": "alias",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "reference",
            "type": {
              "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
              "name": "OrchidReference",
              "dimension": ""
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.OrchidFileResources",
      "name": "OrchidFileResources",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/OrchidFileResources"
    }
  },
  {
    "constructors": [
      {"parameters": [
        {
          "name": "content",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        },
        {
          "name": "reference",
          "type": {
            "qualifiedName": "com.eden.orchid.api.resources.OrchidReference",
            "name": "OrchidReference",
            "dimension": ""
          }
        }
      ]},
      {"parameters": [
        {
          "name": "name",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        },
        {
          "name": "content",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }
      ]}
    ],
    "methods": [],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.resources",
      "qualifiedName": "com.eden.orchid.impl.resources.StringResource",
      "name": "StringResource",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "A Resource type that provides a plain String as content to a template. When used with renderTemplate() or renderString(),\n this resource will supply the `page.content` variable to the template renderer. When used with renderRaw(), the raw\n plain String content will be written directly instead."
        }],
        "description": "<p>A Resource type that provides a plain String as content to a template. When used with renderTemplate() or renderString(),\nthis resource will supply the <code>page.content<\/code> variable to the template renderer. When used with renderRaw(), the raw\nplain String content will be written directly instead.<\/p>\n",
        "shortDescription": "A Resource type that provides a plain String as content to a template."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/resources/StringResource"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.BuildTask",
      "name": "BuildTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/BuildTask"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "compilers",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.compilers.OrchidCompiler",
          "name": "OrchidCompiler",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListCompilersTask",
      "name": "ListCompilersTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListCompilersTask"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "generators",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerator",
            "name": "OrchidGenerator",
            "dimension": ""
          }]
        }
      },
      {
        "name": "orchidGenerators",
        "type": {
          "qualifiedName": "com.eden.orchid.api.generators.OrchidGenerators",
          "name": "OrchidGenerators",
          "dimension": ""
        }
      }
    ]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListGeneratorsTask",
      "name": "ListGeneratorsTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListGeneratorsTask"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "options",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.options.OrchidOption",
          "name": "OrchidOption",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListOptionsTask",
      "name": "ListOptionsTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListOptionsTask"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "sources",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResourceSource",
          "name": "OrchidResourceSource",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListResourceSourcesTask",
      "name": "ListResourceSourcesTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListResourceSourcesTask"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListTasksTask",
      "name": "ListTasksTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListTasksTask"
    }
  },
  {
    "constructors": [{"parameters": [{
      "name": "themes",
      "type": {
        "qualifiedName": "java.util.Set",
        "name": "Set",
        "dimension": "",
        "typeParameters": [{
          "qualifiedName": "com.eden.orchid.Theme",
          "name": "Theme",
          "dimension": ""
        }]
      }
    }]}],
    "methods": [
      {
        "name": "getName",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "getDescription",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        }
      },
      {
        "name": "run",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.impl.tasks",
      "qualifiedName": "com.eden.orchid.impl.tasks.ListThemesTask",
      "name": "ListThemesTask",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/impl/tasks/ListThemesTask"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "optionLength",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "Get the number of arguments that a given option expects from the command line. This number includes the option\n itself: for example '-d /output/javadoc' should return 2."
          }],
          "blockTags": {"return": "the number of arguments it expects from the command line"},
          "description": "<p>Get the number of arguments that a given option expects from the command line. This number includes the option\nitself: for example '-d /output/javadoc' should return 2.<\/p>\n",
          "shortDescription": "Get the number of arguments that a given option expects from the command line."
        },
        "returns": {
          "qualifiedName": "int",
          "name": "int",
          "dimension": ""
        },
        "parameters": [{
          "name": "option",
          "description": "the option to parse",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "languageVersion",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "NOTE: Without this method present and returning LanguageVersion.JAVA_1_5,\n Javadoc will not process generics because it assumes LanguageVersion.JAVA_1_1"
          }],
          "blockTags": {"return": "language version (hard coded to LanguageVersion.JAVA_1_5)"},
          "description": "<p>NOTE: Without this method present and returning LanguageVersion.JAVA_1_5,\nJavadoc will not process generics because it assumes LanguageVersion.JAVA_1_1<\/p>\n",
          "shortDescription": "NOTE: Without this method present and returning LanguageVersion.JAVA_1_5,\n Javadoc will not process generics because it assumes LanguageVersion.JAVA_1_1"
        },
        "returns": {
          "qualifiedName": "com.sun.javadoc.LanguageVersion",
          "name": "LanguageVersion",
          "dimension": ""
        }
      },
      {
        "name": "getContext",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.OrchidContext",
          "name": "OrchidContext",
          "dimension": ""
        }
      },
      {
        "name": "getInjector",
        "returns": {
          "qualifiedName": "com.google.inject.Injector",
          "name": "Injector",
          "dimension": ""
        }
      },
      {
        "name": "main",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "args",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "start",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "rootDoc",
          "type": {
            "qualifiedName": "com.sun.javadoc.RootDoc",
            "name": "RootDoc",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid",
      "qualifiedName": "com.eden.orchid.Orchid",
      "name": "Orchid",
      "comment": {
        "inlineTags": [{
          "kind": "text",
          "value": "This is the main entry point to the Orchid build process. It does little more than create a Context for Orchid to runTask\n within, and then set that context into motion. It is the single point-of-entry for starting the Orchid process; both\n Javadoc's `start` method and the Java `main` method are in here, which create the appropriate OrchidContext and then\n runTask a single Orchid task."
        }],
        "description": "<p>This is the main entry point to the Orchid build process. It does little more than create a Context for Orchid to runTask\nwithin, and then set that context into motion. It is the single point-of-entry for starting the Orchid process; both\nJavadoc's <code>start<\/code> method and the Java <code>main<\/code> method are in here, which create the appropriate OrchidContext and then\nrunTask a single Orchid task.<\/p>\n",
        "shortDescription": "This is the main entry point to the Orchid build process."
      },
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/Orchid"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "addToSet",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "setClass",
            "type": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "dimension": "",
              "typeParameters": [{
                "qualifiedName": "T",
                "name": "T",
                "dimension": ""
              }]
            }
          },
          {
            "name": "objectClasses",
            "type": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "dimension": "[]",
              "typeParameters": [{
                "qualifiedName": "?",
                "name": "?",
                "dimension": "",
                "wildcardType": {"extends": [{
                  "qualifiedName": "T",
                  "name": "T",
                  "dimension": ""
                }]}
              }]
            }
          }
        ]
      },
      {
        "name": "addTheme",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [{
          "name": "themeClass",
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "dimension": "",
            "typeParameters": [{
              "qualifiedName": "?",
              "name": "?",
              "dimension": "",
              "wildcardType": {"extends": [{
                "qualifiedName": "com.eden.orchid.Theme",
                "name": "Theme",
                "dimension": ""
              }]}
            }]
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid",
      "qualifiedName": "com.eden.orchid.OrchidModule",
      "name": "OrchidModule",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/OrchidModule"
    }
  },
  {
    "constructors": [{"parameters": [
      {
        "name": "resources",
        "type": {
          "qualifiedName": "com.eden.orchid.api.resources.OrchidResources",
          "name": "OrchidResources",
          "dimension": ""
        }
      },
      {
        "name": "compilers",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.compilers.OrchidCompiler",
            "name": "OrchidCompiler",
            "dimension": ""
          }]
        }
      },
      {
        "name": "preCompilers",
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "com.eden.orchid.api.compilers.OrchidPreCompiler",
            "name": "OrchidPreCompiler",
            "dimension": ""
          }]
        }
      }
    ]}],
    "methods": [
      {
        "name": "getPrecompilerClass",
        "returns": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "?",
            "name": "?",
            "dimension": "",
            "wildcardType": {"extends": [{
              "qualifiedName": "com.eden.orchid.api.compilers.OrchidPreCompiler",
              "name": "OrchidPreCompiler",
              "dimension": ""
            }]}
          }]
        }
      },
      {
        "name": "shouldContinue",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        }
      },
      {
        "name": "onThemeSet",
        "comment": {
          "inlineTags": [{
            "kind": "text",
            "value": "A callback fired on the selected theme when it is first set. By this time, Orchid has registered all compoenents\n and parsed all Options, but has not yet started a OrchidTask."
          }],
          "description": "<p>A callback fired on the selected theme when it is first set. By this time, Orchid has registered all compoenents\nand parsed all Options, but has not yet started a OrchidTask.<\/p>\n",
          "shortDescription": "A callback fired on the selected theme when it is first set."
        },
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "generateHomepage",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        }
      },
      {
        "name": "compile",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "extension",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "input",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "data",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": "[]"
            }
          }
        ]
      },
      {
        "name": "compilerFor",
        "returns": {
          "qualifiedName": "com.eden.orchid.api.compilers.OrchidCompiler",
          "name": "OrchidCompiler",
          "dimension": ""
        },
        "parameters": [{
          "name": "extension",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getEmbeddedData",
        "returns": {
          "qualifiedName": "com.eden.common.util.EdenPair",
          "name": "EdenPair",
          "dimension": "",
          "typeParameters": [
            {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            },
            {
              "qualifiedName": "com.eden.common.json.JSONElement",
              "name": "JSONElement",
              "dimension": ""
            }
          ]
        },
        "parameters": [{
          "name": "input",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "getOutputExtension",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "extension",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid",
      "qualifiedName": "com.eden.orchid.Theme",
      "name": "Theme",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/Theme"
    }
  },
  {
    "constructors": [
      {},
      {"parameters": [{
        "name": "comparator",
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "?",
            "name": "?",
            "dimension": "",
            "wildcardType": {"super": [{
              "qualifiedName": "T",
              "name": "T",
              "dimension": ""
            }]}
          }]
        }
      }]},
      {"parameters": [{
        "name": "c",
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "?",
            "name": "?",
            "dimension": "",
            "wildcardType": {"extends": [{
              "qualifiedName": "T",
              "name": "T",
              "dimension": ""
            }]}
          }]
        }
      }]},
      {"parameters": [{
        "name": "s",
        "type": {
          "qualifiedName": "java.util.SortedSet",
          "name": "SortedSet",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }]
        }
      }]}
    ],
    "methods": [
      {
        "name": "add",
        "returns": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "dimension": ""
        },
        "parameters": [{
          "name": "element",
          "type": {
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }
        }]
      },
      {
        "name": "update",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "element",
            "type": {
              "qualifiedName": "java.util.Observable",
              "name": "Observable",
              "dimension": ""
            }
          },
          {
            "name": "arg",
            "type": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "dimension": ""
            }
          }
        ]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.utilities",
      "qualifiedName": "com.eden.orchid.utilities.ObservableTreeSet",
      "name": "ObservableTreeSet",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/utilities/ObservableTreeSet"
    }
  },
  {
    "constructors": [{}],
    "methods": [
      {
        "name": "applyBaseUrl",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "url",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "buildTaxonomy",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "asset",
            "type": {
              "qualifiedName": "com.eden.orchid.api.resources.OrchidResource",
              "name": "OrchidResource",
              "dimension": ""
            }
          },
          {
            "name": "siteAssets",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          },
          {
            "name": "file",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "buildTaxonomy",
        "returns": {
          "qualifiedName": "void",
          "name": "void",
          "dimension": ""
        },
        "parameters": [
          {
            "name": "taxonomy",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "siteAssets",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          },
          {
            "name": "file",
            "type": {
              "qualifiedName": "org.json.JSONObject",
              "name": "JSONObject",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "linkTo",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "link",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      },
      {
        "name": "wrapString",
        "returns": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "content",
            "type": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "dimension": ""
            }
          },
          {
            "name": "width",
            "type": {
              "qualifiedName": "int",
              "name": "int",
              "dimension": ""
            }
          }
        ]
      },
      {
        "name": "getText",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "tags",
          "type": {
            "qualifiedName": "com.sun.javadoc.Tag",
            "name": "Tag",
            "dimension": "[]"
          }
        }]
      },
      {
        "name": "resolveSet",
        "returns": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }]
        },
        "parameters": [{
          "name": "clazz",
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "dimension": "",
            "typeParameters": [{
              "qualifiedName": "T",
              "name": "T",
              "dimension": ""
            }]
          }
        }]
      },
      {
        "name": "resolveSet",
        "returns": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "dimension": "",
          "typeParameters": [{
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }]
        },
        "parameters": [
          {
            "name": "injector",
            "type": {
              "qualifiedName": "com.google.inject.Injector",
              "name": "Injector",
              "dimension": ""
            }
          },
          {
            "name": "clazz",
            "type": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "dimension": "",
              "typeParameters": [{
                "qualifiedName": "T",
                "name": "T",
                "dimension": ""
              }]
            }
          }
        ]
      },
      {
        "name": "stripSeparators",
        "returns": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "dimension": ""
        },
        "parameters": [{
          "name": "str",
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "dimension": ""
          }
        }]
      }
    ],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.utilities",
      "qualifiedName": "com.eden.orchid.utilities.OrchidUtils",
      "name": "OrchidUtils",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/utilities/OrchidUtils"
    }
  },
  {
    "constructors": [{}],
    "methods": [{
      "name": "compare",
      "returns": {
        "qualifiedName": "int",
        "name": "int",
        "dimension": ""
      },
      "parameters": [
        {
          "name": "o1",
          "type": {
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }
        },
        {
          "name": "o2",
          "type": {
            "qualifiedName": "T",
            "name": "T",
            "dimension": ""
          }
        }
      ]
    }],
    "fields": [],
    "info": {
      "package": "com.eden.orchid.utilities",
      "qualifiedName": "com.eden.orchid.utilities.OrchidUtils.DefaultComparator",
      "name": "DefaultComparator",
      "url": "https://javaeden.github.io/Orchid/latest/Core/classes/com/eden/orchid/utilities/OrchidUtils/DefaultComparator"
    }
  }
]