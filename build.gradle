// Configure build, dependencies, output jar, and Java compatibility
//------------------------------------------------------------------------------
plugins {
    id 'java'
    id 'jacoco'
    id 'org.ajoberstar.grgit' version '1.6.0'
    id 'org.ajoberstar.github-pages' version '1.6.0'
}

group 'com.eden'
version = 'v0.1.3'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    orchidDocs
}

sourceSets {
    orchidDocs
}

repositories {
    maven { url 'http://jcenter.bintray.com/' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // enable processing JavaDoc
    compile files(org.gradle.internal.jvm.Jvm.current().toolsJar)

    // Enable auto-registration of plugins and themes
    compile 'io.github.lukehutch:fast-classpath-scanner:2.0.9'

    // For matching files
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'fr.opensagres.js:minimatch.java:1.1.0'

    // Included basic parsers: JSON, YAML, Twig, Markdown
    compile 'org.json:json:20160810'
    compile 'org.yaml:snakeyaml:1.17'
    compile 'org.jtwig:jtwig-core:5.65'
    compile 'com.vladsch.flexmark:flexmark:0.7.0'
    compile 'ch.qos.logback:logback-classic:0.9.26'

    // automatically retrieve additional classes from other Orchid documentation sites
    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    // Logging
    compile 'com.github.cjbrooks12:Clog:v1.2.3'

    // generate own documentation with specific theme
    orchidDocsCompile 'com.github.JavaEden:OrchidEditorialTheme:e6ab6855b0'
//    orchidDocsCompile 'com.github.JavaEden:Orchid-Liquid:d5211b6bea'
}

// Jacoco Code Coverage
//------------------------------------------------------------------------------
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

// Javadoc Generation
//------------------------------------------------------------------------------
javadoc {
    title = ""
    source = sourceSets.main.allJava

    options.docletpath.addAll(configurations.orchidDocsCompile)
    options.doclet = 'com.eden.orchid.Orchid'

    options.addStringOption("theme", "com.eden.orchid.editorial.EditorialTheme")
//    options.addStringOption("theme", "com.eden.orchidliquid.BSDocTheme")
    options.addStringOption("resourcesDir", sourceSets.orchidDocs.resources.srcDirs[0].toString())

    options.addStringOption("v", version)
//    options.addStringOption("baseUrl", "https://javaeden.github.io/Orchid-Core")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// Tagging, Releases, and Github Pages Publishing
task setGitReleaseTag {
    doLast {
        if((grgit.tag.list().findAll { item -> item.name.equals(version) }).size() > 0) {
            println "Version '${version}' is already tagged"
        }
        else {
            println "Tagging repo with version: ${version}."
            grgit.tag.add {
                name = version
                message = "Updates to version ${version}"
            }
        }
    }
}

prepareGhPages.outputs.upToDateWhen { false }
publishGhPages.outputs.upToDateWhen { false }

githubPages {
    pages {
        from javadoc
        into ""
    }
}

task release {

}

tasks.release.dependsOn 'build', 'setGitReleaseTag', 'publishGhPages'
