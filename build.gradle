// Configure build, dependencies, output jar, and Java compatibility
//------------------------------------------------------------------------------

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

// Define the 'types' of projects Orchid is working with
//      coreProject - the main core module required by every other Orchid extension
//      themeProjects - Orchid themes, required to actually use Orchid by all other projects
//      pluginProjects - Additional functionality to add to Orchid, none of which are required by any project, but
//          are all included in Core's Orchid build
//      mainProjects - The aggregate of the above groups. Excludes 'empty projects' like ':themes' and ':plugins', as
//          well as the root project and 'buildSrc'
ext.coreProject = subprojects.findAll {
    return (it.name == "core")
}
ext.themeProjects = subprojects.findAll {
    return (it.path.startsWith(":themes")) && (it.name != "themes")
}
ext.pluginProjects = subprojects.findAll {
    return (it.path.startsWith(":plugins")) && (it.name != "plugins")
}
ext.mainProjects = coreProject + themeProjects + pluginProjects

// apply common plugins, configurations, dependencies, etc. to all core projects
configure(ext.mainProjects) {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.eden.orchidPlugin'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    group 'com.eden'
    version = 'v0.1.0'

    ext {
        commonTheme = ':themes:BsDoc'
        commonThemeClass = 'com.eden.orchid.bsdoc.BSDocTheme'
//        commonBaseUrl = 'http://localhost:8080'
        commonBaseUrl = 'https://javaeden.github.io/OrchidCore'
        commonRunTask = "listThemes"
    }

    apply from: "$rootDir/gradle/javadoc.gradle"
    apply from: "$rootDir/gradle/publish.gradle"

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-library:1.3'
        compile files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }

    task copyToVersion(type: Copy) {
        dependsOn 'javadoc'

        from "$buildDir/docs/javadoc"
        into "$rootDir/docs/${project.version}/${project.name}"
    }

    task copyToLatest(type: Copy) {
        dependsOn 'javadoc'

        from "$buildDir/docs/javadoc"
        into "$rootDir/docs/latest/${project.name}"

        filter{ it.replaceAll("/${project.version}/", "/latest/")}
    }

    task copyToRoot() {
        dependsOn 'copyToVersion', 'copyToLatest'
    }

    clean.dependsOn 'cleanCopyToVersion', 'cleanCopyToLatest'

}

// apply theme-specific configurations to those projects
configure(ext.themeProjects) {

    dependencies {
        compile project(":core")

        orchidDocsCompile project
    }

    tasks.jar {
        dependsOn ':core:jar'
    }
}

// apply plugin-specific configurations to those projects
configure(ext.pluginProjects) {
    dependencies {
        compile project(":core")

        orchidDocsCompile project("${project.ext.commonTheme}")
        orchidDocsCompile project
    }

    tasks.jar {
        dependsOn ':core:jar', "${project.ext.commonTheme}:jar"
    }
}