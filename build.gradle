// Configure build, dependencies, output jar, and Java compatibility
//------------------------------------------------------------------------------

//buildscript {
//    repositories {
//        flatDir dirs: '../OrchidGradlePlugin/build/libs'
//    }
//    dependencies {
//        classpath 'com.eden:OrchidGradlePlugin:v0.1.4'
//    }
//}
plugins {
    id 'java'
    id 'jacoco'
    id 'org.ajoberstar.grgit' version '1.6.0'
    id 'org.ajoberstar.github-pages' version '1.6.0'
    id 'com.eden.orchidplugin' version 'v0.1.4'
}

//apply plugin: 'com.eden.orchidplugin'

group 'com.eden'
version = 'v0.1.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    maven { url 'http://jcenter.bintray.com/' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Unit testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    // enable processing JavaDoc
    compile files(org.gradle.internal.jvm.Jvm.current().toolsJar)

    // core JavaEden utilities
    compile 'com.github.JavaEden:Common:64f41c1f66'

    // Enable auto-registration of plugins and themes
    compile 'io.github.lukehutch:fast-classpath-scanner:2.0.9'

    // For matching files
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'fr.opensagres.js:minimatch.java:1.1.0'

    // Included basic parsers: JSON, YAML, Twig, Markdown
    compile 'org.json:json:20160810'
    compile 'org.yaml:snakeyaml:1.17'
    compile 'org.jtwig:jtwig-core:5.65'
    compile 'com.vladsch.flexmark:flexmark:0.7.0'
    compile 'ch.qos.logback:logback-classic:0.9.26'

    // automatically retrieve additional classes from other Orchid documentation sites
    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    compile 'org.jsoup:jsoup:1.10.2'


    // Logging
    compile 'com.github.cjbrooks12:Clog:v1.2.3'

    // generate own documentation with Orchid
    orchidDocsCompile files("build/libs/OrchidCore-${version}.jar")
    orchidDocsCompile('com.github.JavaEden:OrchidBsDocTheme:6e87affcb7') {
        exclude group: 'com.github.JavaEden', module: 'OrchidCore'
    }
//    orchidDocsCompile('com.github.JavaEden:OrchidEditorialTheme:3bde6f3df7') {
//        exclude group: 'com.github.JavaEden', module: 'OrchidCore'
//    }
    orchidDocsCompile('com.github.JavaEden:OrchidPages:aca731a3f1') {
        exclude group: 'com.github.JavaEden', module: 'OrchidCore'
    }
    orchidDocsCompile('com.github.JavaEden:OrchidPosts:134e7b7122') {
        exclude group: 'com.github.JavaEden', module: 'OrchidCore'
    }
    orchidDocsCompile('com.github.JavaEden:OrchidWiki:32f2412259') {
        exclude group: 'com.github.JavaEden', module: 'OrchidCore'
    }
}

// Jacoco Code Coverage
//------------------------------------------------------------------------------
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

// Javadoc Generation
//------------------------------------------------------------------------------
orchid {
    includeMainConfiguration = true
    program = "watch"
//    program = "build"

    theme = 'com.eden.orchid.bsdoc.BSDocTheme'
//    theme = 'com.eden.orchid.editorial.EditorialTheme'
    version = this.version
    baseUrl = 'http://localhost:8080'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
